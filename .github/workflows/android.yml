name: Android CI (Zip Build - Manual SDK)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # ANDROID_SDK_ROOT ve PATH hazırlığı + cmdline-tools kurulumu
      - name: Install Android SDK cmdline-tools
        shell: bash
        run: |
          set -euxo pipefail
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fsSL -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          sdkmanager --version

      # Lisansları kabul et ve gerekli paketleri sırayla kur (retry'li)
      - name: Accept licenses & install required packages
        shell: bash
        run: |
          set -euxo pipefail
          export ANDROID_SDK_ROOT="$ANDROID_SDK_ROOT"
          yes | sdkmanager --licenses || true

          install_pkg () {
            local PKG="$1"
            sdkmanager "$PKG" || { echo "retry $PKG"; sleep 5; sdkmanager "$PKG"; }
          }

          install_pkg "platform-tools"
          install_pkg "platforms;android-34"
          # build-tools sürüm fallback: önce 34.0.2, olmazsa 34.0.0
          sdkmanager "build-tools;34.0.2" || sdkmanager "build-tools;34.0.0"

          echo "== Installed packages =="
          sdkmanager --list | head -n 80
          ls -la "$ANDROID_SDK_ROOT/build-tools" || true

      # Zip'i aç ve proje köküne hizala
      - name: Unzip project & align root
        shell: bash
        run: |
          set -euxo pipefail
          unzip -o ApneaTrainerProject.zip -d "$GITHUB_WORKSPACE"
          if [ -d "$GITHUB_WORKSPACE/ApneaTrainer" ]; then
            shopt -s dotglob
            mv "$GITHUB_WORKSPACE/ApneaTrainer/"* "$GITHUB_WORKSPACE"/
            rmdir "$GITHUB_WORKSPACE/ApneaTrainer"
          fi
          ls -la
          test -f "$GITHUB_WORKSPACE/build.gradle.kts" || (echo "HATA: build.gradle.kts kökte yok" && exit 1)

      # Gradle wrapper yok → sabit Gradle 8.7 ile derle
      - name: Build Debug APK
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.7
          arguments: assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ApneaTrainer-debug-apk
          path: app/build/outputs/apk/debug/*.apk
